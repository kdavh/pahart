# # supposedly simple proxy_pass setup
# worker_processes 1;
#
# events { worker_connections 1024; }
#
# http {
#
#     sendfile on;
#
#     server {
#
#         listen 80 default;
#
#         location / {
#             proxy_pass http://web_upstream;
#             proxy_set_header  X-Real-IP  $remote_addr;
#         }
#     }
# }
#
# upstream web_upstream {
#   server web:3000;
# }



# default nginx.conf
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
#     include /etc/nginx/sites-enabled/*;
}

# # another nginx.conf ...
# http {
#         sendfile on;
#         tcp_nopush on;
#         tcp_nodelay on;
#         keepalive_timeout 65;
#         types_hash_max_size 2048;
#         server_tokens off;
#
#         # server_names_hash_bucket_size 64;
#         # server_name_in_redirect off;
#
#         include /etc/nginx/mime.types;
#         default_type application/octet-stream;
#
#         access_log /var/log/nginx/access.log;
#         error_log /var/log/nginx/error.log;
#
#         gzip on;
#         gzip_disable "msie6";
#         gzip_types text/plain text/xml text/css text/comma-separated-values;
#         upstream app_server { server 127.0.0.1:8080 fail_timeout=0; }
#
#         include /etc/nginx/conf.d/*.conf;
#         include /etc/nginx/sites-enabled/*;
# }
